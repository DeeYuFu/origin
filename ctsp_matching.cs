//
// File generated by HDevelop for HALCON/.NET (C#) Version 13.0
//
//  This file is intended to be used with the HDevelopTemplate or
//  HDevelopTemplateWPF projects located under %HALCONEXAMPLES%\c#

using System;
using System.Windows.Forms;
using HalconDotNet;

public partial class HDevelopExport
{
  public HTuple hv_ExpDefaultWinHandle;

  public void HDevelopStop()
  {
    MessageBox.Show("Press button to continue", "Program stop");
  }

  // Main procedure 
  private void action()
  {


    // Local iconic variables 

    HObject ho_Image1, ho_mat, ho_Rectangle=null;

    // Local control variables 

    HTuple hv_a = null, hv_b = new HTuple(), hv_num = new HTuple();
    HTuple hv_ModelID = new HTuple(), hv_Row = new HTuple();
    HTuple hv_Column = new HTuple(), hv_Angle = new HTuple();
    HTuple hv_Score = new HTuple(), hv_Index = new HTuple();
    // Initialize local and output iconic variables 
    HOperatorSet.GenEmptyObj(out ho_Image1);
    HOperatorSet.GenEmptyObj(out ho_mat);
    HOperatorSet.GenEmptyObj(out ho_Rectangle);
    //要匹配的
    ho_Image1.Dispose();
    HOperatorSet.ReadImage(out ho_Image1, "G:/中科比賽/0905積木拍照/mat3.bmp");
    //取單一通道
    ho_mat.Dispose();
    HOperatorSet.AccessChannel(ho_Image1, out ho_mat, 1);

    HOperatorSet.DispObj(ho_mat, hv_ExpDefaultWinHandle);

    for (hv_a=1; (int)hv_a<=20; hv_a = (int)hv_a + 1)
    {
      hv_b = new HTuple();
      hv_b[0] = 1;
      hv_b[1] = 2;
      hv_b[2] = 3;
      hv_b[3] = 4;
      hv_b[4] = 5;
      hv_b[5] = 6;
      hv_b[6] = 7;
      hv_b[7] = 8;
      hv_b[8] = 9;
      hv_b[9] = 10;
      hv_b[10] = 11;
      hv_b[11] = 12;
      hv_b[12] = 13;
      hv_b[13] = 14;
      hv_b[14] = 15;
      hv_b[15] = 16;
      hv_b[16] = 17;
      hv_b[17] = 18;
      hv_b[18] = 19;
      hv_b[19] = 20;
      HOperatorSet.TupleString(hv_b.TupleSelect(hv_a-1), "d", out hv_num);
      HOperatorSet.ReadShapeModel(("E:/FU/CTSP_block/atot/"+hv_num)+"", out hv_ModelID);
      HOperatorSet.FindShapeModel(ho_mat, hv_ModelID, (new HTuple(0)).TupleRad(), 
          (new HTuple(360)).TupleRad(), 0.7, 1, 0.1, "least_squares_very_high", 2, 
          0.1, out hv_Row, out hv_Column, out hv_Angle, out hv_Score);
      for (hv_Index=0; (int)hv_Index<=(int)((new HTuple(hv_Score.TupleLength()))-1); hv_Index = (int)hv_Index + 1)
      {
        ho_Rectangle.Dispose();
        HOperatorSet.GenRectangle2ContourXld(out ho_Rectangle, hv_Row.TupleSelect(
            hv_Index), hv_Column.TupleSelect(hv_Index), hv_Angle.TupleSelect(hv_Index), 
            30, 30);
      }
      HDevelopStop();
    }


    ho_Image1.Dispose();
    ho_mat.Dispose();
    ho_Rectangle.Dispose();

  }

  public void InitHalcon()
  {
    // Default settings used in HDevelop 
    HOperatorSet.SetSystem("width", 512);
    HOperatorSet.SetSystem("height", 512);
  }

  public void RunHalcon(HTuple Window)
  {
    hv_ExpDefaultWinHandle = Window;
    action();
  }

}

